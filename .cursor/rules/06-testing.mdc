---
description: 
globs: 
alwaysApply: true
---
# Testing Standards and Practices

## Test Coverage Requirements

1. **Coverage Targets**
   - Minimum 70% code coverage
   - Critical paths require 90% coverage
   - Full E2E coverage for auth flows
   - Full coverage for payment flows

2. **Test Organization**
   - Tests in `__tests__` directories
   - Follow same structure as source
   - Clear test file naming
   - Group tests by feature

## Test Types

1. **Unit Tests**
   - Test individual components
   - Test utility functions
   - Test hooks in isolation
   - Mock external dependencies

2. **Integration Tests**
   - Test feature workflows
   - Test API integration
   - Test state management
   - Test cross-component interaction

3. **E2E Tests**
   - Test critical user flows
   - Test payment processes
   - Test offline functionality
   - Test sync mechanisms

## Testing Rules

1. **Component Testing**
   - Test all props combinations
   - Test error states
   - Test loading states
   - Test user interactions

2. **API Testing**
   - Mock Supabase responses
   - Test error handling
   - Test offline behavior
   - Test retry mechanisms

3. **Mobile Specific**
   - Test offline mode
   - Test sync functionality
   - Test permissions
   - Test native features

## Test Utilities

1. **Mock Data**
   - Use factories for test data
   - Maintain mock consistency
   - Document mock usage
   - Version control mocks

2. **Testing Libraries**
   - Jest for unit tests
   - React Testing Library
   - Cypress for E2E (web)
   - Detox for E2E (mobile)

## CI Integration

1. **Continuous Testing**
   - Run tests on every PR
   - Block merge on test failure
   - Report coverage changes
   - Maintain test performance

2. **Test Environment**
   - Use clean test database
   - Reset state between tests
   - Isolate test runs
   - Clean up after tests
